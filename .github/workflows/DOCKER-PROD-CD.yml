name: DOCKER-CD
on:
  push:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-24.04
    env:
      working-directory: .


    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: application.yml 생성
        run: |
          mkdir -p ./src/main/resources && cd $_
          touch ./application.yml
          echo "${{ secrets.CD_PROD_APPLICATION }}" > ./application.yml
          cat ./application.yml
        working-directory: ${{ env.working-directory }}

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        working-directory: ${{ env.working-directory }}
        shell: bash


      - name: docker 로그인
        uses: docker/setup-buildx-action@v2.9.1

      - name: login docker hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_PROD_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_PROD_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        run: |
          IMAGE_TAG=prod
          docker build --platform linux/amd64 -t permitseoulprod/prodrepo:$IMAGE_TAG .
          docker push permitseoulprod/prodrepo:$IMAGE_TAG
        working-directory: ${{ env.working-directory }}

  cd:
    needs: ci
    runs-on: ubuntu-24.04

    steps:
      - name: docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_PROD_IP }}
          username: ${{ secrets.SERVER_PROD_USER }}
          key: ${{ secrets.SERVER_PROD_KEY }}
          script: |
            cd ~
            ./deploy.sh
